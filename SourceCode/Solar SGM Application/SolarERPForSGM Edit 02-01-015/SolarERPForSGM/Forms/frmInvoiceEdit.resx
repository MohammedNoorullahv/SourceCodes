<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="cbExit.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>
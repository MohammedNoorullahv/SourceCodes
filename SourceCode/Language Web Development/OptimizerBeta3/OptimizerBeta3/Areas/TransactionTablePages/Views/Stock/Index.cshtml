@model IEnumerable<OptimizerBeta3.Models.GeneralTables.TempStockView>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<br />
<div>
    <div class="row">
        <div class="col-6">
            <h2 class="text-info">Stocks</h2>
        </div>
    </div>
    <div>
        <form asp-action="IndexFilter" asp-controller="Inward">
            <div class="row">
                <div class="col-2">
                    <h3 class="text-success">From Date :</h3>
                </div>
                <div class="col-2">
                    @*<input type="date" id="fromDate" name="fromDate" value="@(((DateTime)ViewBag.FromDate).Date.ToString("yyyy-MM-dd"))" />*@
                </div>
                <div class="col-2">
                    <h3 class="text-success">To Date :</h3>
                </div>
                <div class="col-2">
                    @*<input type="date" id="toDate" name="toDate" value="@(((DateTime)ViewBag.ToDate).Date.ToString("yyyy-MM-dd"))" />*@

                </div>
                <div class="col-2">

                </div>
                <div class="col-2 text-right">
                    @*<input type="submit" value="&nbsp; &nbsp; &nbsp; Refresh &nbsp;&nbsp; &nbsp; &nbsp;" class="btn btn-success" />*@
                </div>
            </div>
        </form>
    </div>
</div>

<br />

<div>
    @*@if (Model.Count() > 0)*@
    @if (Model.Count() > 0)
    {
        <table class="table table-success table-striped table-hover table-bordered">
            <tr class="table-success text-info">
                <th> @Html.DisplayNameFor(m => m.LocationName) </th>
                <th> @Html.DisplayNameFor(m => m.Quality) </th>
                <th> @Html.DisplayNameFor(m => m.Status) </th>
                <th> @Html.DisplayNameFor(m => m.StockNo) </th>
                <th> @Html.DisplayNameFor(m => m.EANCode) </th>
                <th> @Html.DisplayNameFor(m => m.Description) </th>
                <th> @Html.DisplayNameFor(m => m.Colour) </th>
                <th> @Html.DisplayNameFor(m => m.Size) </th>
                <th> @Html.DisplayNameFor(m => m.Quantity) </th>
                <th> @Html.DisplayNameFor(m => m.Rate) </th>
                <th> @Html.DisplayNameFor(m => m.Value) </th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td> @Html.DisplayFor(m => item.LocationName) </td>
                    <td> @Html.DisplayFor(m => item.Quality) </td>
                    <td> @Html.DisplayFor(m => item.Status) </td>
                    <td> @Html.DisplayFor(m => item.StockNo) </td>
                    <td> @Html.DisplayFor(m => item.EANCode) </td>
                    <td> @Html.DisplayFor(m => item.Description) </td>
                    <td> @Html.DisplayFor(m => item.Colour) </td>
                    <td> @Html.DisplayFor(m => item.Size) </td>
                    <td> @Html.DisplayFor(m => item.Quantity) </td>
                    <td> @Html.DisplayFor(m => item.Rate) </td>
                    <td> @Html.DisplayFor(m => item.Value) </td>
                </tr>
            }
        </table>
    }
    else
    {
        <p> No Stock exists.....</p>
    }
</div>


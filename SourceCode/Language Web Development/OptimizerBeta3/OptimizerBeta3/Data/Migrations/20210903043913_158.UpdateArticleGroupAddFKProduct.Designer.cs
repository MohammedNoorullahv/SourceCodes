// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OptimizerBeta3.Data;

namespace OptimizerBeta3.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210903043913_158.UpdateArticleGroupAddFKProduct")]
    partial class _158UpdateArticleGroupAddFKProduct
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.GeneralTables.CarouselSlider", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FileSize")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("CarouselSlider");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.GeneralTables.MdlTempArticalArrivalEANCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EANCode")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("IPAddress")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("InwardNo")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<bool>("IsMatching")
                        .HasColumnType("bit");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("TempArticalArrivalEANCodes");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.GeneralTables.MdlTempInwardDtls", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CGSTPercentage")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("CGSTValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<string>("Colour")
                        .HasColumnType("Varchar(20)");

                    b.Property<string>("Description")
                        .HasColumnType("Varchar(50)");

                    b.Property<decimal>("DiscountPercentage")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("DiscountValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<string>("EANCode")
                        .HasMaxLength(13)
                        .HasColumnType("varchar(13)");

                    b.Property<int>("FKArticle")
                        .HasColumnType("int");

                    b.Property<int>("FKCurrency")
                        .HasColumnType("int");

                    b.Property<int>("FKInwardNo")
                        .HasColumnType("int");

                    b.Property<int>("FKLocation")
                        .HasColumnType("int");

                    b.Property<int>("FKMaterial")
                        .HasColumnType("int");

                    b.Property<int>("FKSource")
                        .HasColumnType("int");

                    b.Property<int>("FKSupplier")
                        .HasColumnType("int");

                    b.Property<int>("FKUOM")
                        .HasColumnType("int");

                    b.Property<int>("FKUnit")
                        .HasColumnType("int");

                    b.Property<decimal>("GSTTotalValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("GrossValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<int>("HSNCode")
                        .HasColumnType("int");

                    b.Property<decimal>("IGSTPercentage")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("IGSTValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("IIQuantity")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<string>("IPAddress")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("InwardDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("InwardNo")
                        .HasColumnType("varchar(20)");

                    b.Property<decimal>("ItemNettValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<string>("MaterialorFinishedProduct")
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("OrderReferenceNo")
                        .HasColumnType("Varchar(50)");

                    b.Property<decimal>("OthersValuePlus")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("Rate")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<bool>("ReadyforImport")
                        .HasColumnType("bit");

                    b.Property<string>("Reason")
                        .HasColumnType("Varchar(20)");

                    b.Property<decimal>("SGSTPercentage")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("SGSTValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("Size")
                        .HasColumnType("Decimal(18,1)");

                    b.Property<string>("StockNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<decimal>("Value")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("ValueinINR")
                        .HasColumnType("Decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("TempInwardDtls");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.GeneralTables.TempInvoiceDtl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CGSTPercentage")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("CGSTValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<string>("Colour")
                        .HasColumnType("Varchar(20)");

                    b.Property<string>("Description")
                        .HasColumnType("Varchar(50)");

                    b.Property<decimal>("DiscountPercentage")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("DiscountValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<string>("EANCode")
                        .HasMaxLength(13)
                        .HasColumnType("varchar(13)");

                    b.Property<int>("FKArticle")
                        .HasColumnType("int");

                    b.Property<int>("FKCurrency")
                        .HasColumnType("int");

                    b.Property<int>("FKCustomer")
                        .HasColumnType("int");

                    b.Property<int>("FKIIUom")
                        .HasColumnType("int");

                    b.Property<int>("FKInvoiceNo")
                        .HasColumnType("int");

                    b.Property<int>("FKLocation")
                        .HasColumnType("int");

                    b.Property<int>("FKMaterial")
                        .HasColumnType("int");

                    b.Property<int>("FKSource")
                        .HasColumnType("int");

                    b.Property<int>("FKUOM")
                        .HasColumnType("int");

                    b.Property<int>("FKUnit")
                        .HasColumnType("int");

                    b.Property<decimal>("GSTTotalValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("GrossValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<int>("HSNCode")
                        .HasColumnType("int");

                    b.Property<decimal>("IGSTPercentage")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("IGSTValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("IIQuantity")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<string>("IPAddress")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("InvoiceDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvoiceNo")
                        .HasColumnType("varchar(20)");

                    b.Property<decimal>("ItemNettValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<string>("MaterialorFinishedProduct")
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("OrderReferenceNo")
                        .HasColumnType("Varchar(50)");

                    b.Property<decimal>("OthersValueMinus")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("OthersValuePlus")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("Rate")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<bool>("ReadyforImport")
                        .HasColumnType("bit");

                    b.Property<string>("Reason")
                        .HasColumnType("Varchar(20)");

                    b.Property<decimal>("SGSTPercentage")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("SGSTValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<string>("Size")
                        .HasColumnType("Varchar(5)");

                    b.Property<string>("StockNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<decimal>("Value")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("ValueinINR")
                        .HasColumnType("Decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("TempInvoiceDtls");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.GeneralTables.TempInvoiceDtlEANCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EANCode")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("IPAddress")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("InvoiceNo")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<bool>("IsMatching")
                        .HasColumnType("bit");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<string>("Reason")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("TempInvoiceDtlEANCodes");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.MasterTables.ArticleDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdditionalInfo")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ArticleImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArticleNo")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Category")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("ColorDescription")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<decimal>("CostPrice")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DealerPrice")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EnteredSystemId")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("EntryType")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("FKArticleGroup")
                        .HasColumnType("int");

                    b.Property<int>("FKCategory")
                        .HasColumnType("int");

                    b.Property<int>("FKColour")
                        .HasColumnType("int");

                    b.Property<int>("FKEntryType")
                        .HasColumnType("int");

                    b.Property<int>("FKFeatures")
                        .HasColumnType("int");

                    b.Property<int>("FKHSNCode")
                        .HasColumnType("int");

                    b.Property<int>("FKLeather")
                        .HasColumnType("int");

                    b.Property<int>("FKLiningColour")
                        .HasColumnType("int");

                    b.Property<int>("FKSocksColour")
                        .HasColumnType("int");

                    b.Property<int>("FKSoleColour")
                        .HasColumnType("int");

                    b.Property<string>("Features")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("HSNCode")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Leather")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("LiningColour")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<decimal>("MRP")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Picture")
                        .HasColumnType("varbinary(max)");

                    b.Property<decimal>("ProductTax")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<string>("SocksColour")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("SoleColour")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("StockNo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("Variant")
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.Property<decimal>("VersionNo")
                        .HasColumnType("Decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FKArticleGroup");

                    b.HasIndex("FKCategory");

                    b.HasIndex("FKColour");

                    b.HasIndex("FKEntryType");

                    b.HasIndex("FKFeatures");

                    b.HasIndex("FKHSNCode");

                    b.HasIndex("FKLeather");

                    b.HasIndex("FKLiningColour");

                    b.HasIndex("FKSocksColour");

                    b.HasIndex("FKSoleColour");

                    b.ToTable("articleDetails");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.MasterTables.ArticleGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArticleGroupName")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("ArticleName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ArticleNo")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Brand")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EnteredSystemId")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<int>("FKBrand")
                        .HasColumnType("int");

                    b.Property<int>("FKCategory")
                        .HasColumnType("int");

                    b.Property<int>("FKGroup")
                        .HasColumnType("int");

                    b.Property<int>("FKProduct")
                        .HasColumnType("int");

                    b.Property<int>("FKSeason")
                        .HasColumnType("int");

                    b.Property<int>("FKSizeFor")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSeasonSpecific")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Product")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Season")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("SizeFor")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("VersionNo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FKBrand");

                    b.HasIndex("FKCategory");

                    b.HasIndex("FKGroup");

                    b.HasIndex("FKProduct");

                    b.HasIndex("FKSeason");

                    b.HasIndex("FKSizeFor");

                    b.ToTable("articleGroups");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.MasterTables.Bank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BranchCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnteredSystemId")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<int>("FKBankName")
                        .HasColumnType("int");

                    b.Property<string>("IFSCCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FKBankName");

                    b.ToTable("banks");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.MasterTables.ColorMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ColourCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("ColourName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Combination")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerColourName")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnteredSystemId")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<int>("FKColour")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FKColour");

                    b.ToTable("colorMasters");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.MasterTables.CompanyInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Address2")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ContactNo")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("ContactPersonName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnteredSystemId")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<int>("FKArea")
                        .HasColumnType("int");

                    b.Property<int>("FKCity")
                        .HasColumnType("int");

                    b.Property<int>("FKPincode")
                        .HasColumnType("int");

                    b.Property<int>("FKState")
                        .HasColumnType("int");

                    b.Property<string>("GSTNumber")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MailId")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PANNumber")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ShortName")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("FKArea");

                    b.HasIndex("FKCity");

                    b.HasIndex("FKPincode");

                    b.HasIndex("FKState");

                    b.ToTable("companyInfos");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.MasterTables.CustomerPerson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EMailId")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("EnteredSystemId")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<int>("FKArea")
                        .HasColumnType("int");

                    b.Property<int>("FKCity")
                        .HasColumnType("int");

                    b.Property<int>("FKCountry")
                        .HasColumnType("int");

                    b.Property<int>("FKCustomerOf")
                        .HasColumnType("int");

                    b.Property<int>("FKPincode")
                        .HasColumnType("int");

                    b.Property<int>("FKState")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("HomePhoneNo")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMarried")
                        .HasColumnType("bit");

                    b.Property<string>("MobileNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OfficePhoneNo")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("PersonName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("WeddingDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FKArea");

                    b.HasIndex("FKCity");

                    b.HasIndex("FKCountry");

                    b.HasIndex("FKCustomerOf");

                    b.HasIndex("FKPincode");

                    b.HasIndex("FKState");

                    b.ToTable("customerPerson");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.MasterTables.Filter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionMethod")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<bool>("ConditionIn")
                        .HasColumnType("bit");

                    b.Property<bool>("ConditionNotIn")
                        .HasColumnType("bit");

                    b.Property<string>("ControllerName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnteredSystemId")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<int>("FKLookUpCategory")
                        .HasColumnType("int");

                    b.Property<int>("FKLookUpMaster")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LookUPCategory")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("LookUPMaster")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("FKLookUpCategory");

                    b.HasIndex("FKLookUpMaster");

                    b.ToTable("Filters");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.MasterTables.HSNCodeMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnteredSystemId")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<int>("FKPercentageType")
                        .HasColumnType("int");

                    b.Property<decimal>("GSTPercentage")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<int>("HSNCode")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PercentageType")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("FKPercentageType");

                    b.ToTable("HSNCodeMasters");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.MasterTables.Locations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnteredSystemId")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<int>("FKLocationType")
                        .HasColumnType("int");

                    b.Property<int>("FKUnitDtls")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FKLocationType");

                    b.HasIndex("FKUnitDtls");

                    b.ToTable("locations");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.MasterTables.LookUpCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("EnteredSystemId")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShortCode")
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)");

                    b.Property<int>("SlNo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("lookUpCategories");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.MasterTables.LookUpMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("EnteredSystemId")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<int>("FKLookUpCategory")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("SetAsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("ShortCode")
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)");

                    b.HasKey("Id");

                    b.HasIndex("FKLookUpCategory");

                    b.ToTable("lookUpMasters");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.MasterTables.MaterialDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ApplicableFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ApplicableTo")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnteredSystemId")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<int>("FKCurrency")
                        .HasColumnType("int");

                    b.Property<int>("FKMaterial")
                        .HasColumnType("int");

                    b.Property<int>("FKParty")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPrimeSupplier")
                        .HasColumnType("bit");

                    b.Property<decimal>("MinimumOrdQty")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<int>("MinimumTransitDays")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Rate")
                        .HasColumnType("Decimal(18,4)");

                    b.HasKey("Id");

                    b.HasIndex("FKCurrency");

                    b.HasIndex("FKMaterial");

                    b.HasIndex("FKParty");

                    b.ToTable("materialDetails");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.MasterTables.Materials", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EnteredSystemId")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<int>("FKBrand")
                        .HasColumnType("int");

                    b.Property<int>("FKCategory")
                        .HasColumnType("int");

                    b.Property<int>("FKColour")
                        .HasColumnType("int");

                    b.Property<int>("FKSource")
                        .HasColumnType("int");

                    b.Property<int>("FKSubType")
                        .HasColumnType("int");

                    b.Property<int>("FKType")
                        .HasColumnType("int");

                    b.Property<int>("FKUom")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsExpirable")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PrintDescription")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ShortDescription")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("FKBrand");

                    b.HasIndex("FKCategory");

                    b.HasIndex("FKColour");

                    b.HasIndex("FKSource");

                    b.HasIndex("FKSubType");

                    b.HasIndex("FKType");

                    b.HasIndex("FKUom");

                    b.ToTable("materials");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.MasterTables.MdlStateMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ShortName")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<int>("StateCode")
                        .HasColumnType("int");

                    b.Property<string>("StateName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.HasKey("Id");

                    b.ToTable("StateMasters");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.MasterTables.OfferDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DiscountPercentage")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<string>("EnteredSystemId")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<int>("FKAnniverseryInfo")
                        .HasColumnType("int");

                    b.Property<int>("FKOffer")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsLastRange")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("RangeSubSlNo")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("ValueFrom")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("ValueTo")
                        .HasColumnType("Decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FKAnniverseryInfo");

                    b.HasIndex("FKOffer");

                    b.ToTable("offerDetails");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.MasterTables.Offers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ApplicableForInvoice")
                        .HasColumnType("bit");

                    b.Property<bool>("ApplicableForItem")
                        .HasColumnType("bit");

                    b.Property<int>("BuyPair")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DiscountPercentage")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("DiscountValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<string>("EnteredSystemId")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<int>("FKOffer")
                        .HasColumnType("int");

                    b.Property<int>("FKOfferCategory")
                        .HasColumnType("int");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAnniverseryBased")
                        .HasColumnType("bit");

                    b.Property<bool>("IsExtendable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsProductCompliment")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRangeOffer")
                        .HasColumnType("bit");

                    b.Property<decimal>("MaximumDiscountValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("MinimumBillValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OfferCategory")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("OfferName")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("OfferPair")
                        .HasColumnType("int");

                    b.Property<int?>("RangeSlNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FKOffer");

                    b.HasIndex("FKOfferCategory");

                    b.ToTable("offers");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.MasterTables.PartyInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Address2")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ContactNo")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("ContactPersonName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnteredSystemId")
                        .HasColumnType("varchar(5)");

                    b.Property<int>("FKArea")
                        .HasColumnType("int");

                    b.Property<int>("FKCategory")
                        .HasColumnType("int");

                    b.Property<int>("FKCity")
                        .HasColumnType("int");

                    b.Property<int>("FKCountry")
                        .HasColumnType("int");

                    b.Property<int>("FKPincode")
                        .HasColumnType("int");

                    b.Property<int>("FKState")
                        .HasColumnType("int");

                    b.Property<string>("GSTNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("LessPercentageonMRP")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<string>("MailId")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PANNumber")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ShortName")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("FKArea");

                    b.HasIndex("FKCategory");

                    b.HasIndex("FKCity");

                    b.HasIndex("FKCountry");

                    b.HasIndex("FKPincode");

                    b.HasIndex("FKState");

                    b.ToTable("partyInfos");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.MasterTables.PartyInfoDtls", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Address2")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ContactNo")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("ContactPersonName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnteredSystemId")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<int>("FKArea")
                        .HasColumnType("int");

                    b.Property<int>("FKCity")
                        .HasColumnType("int");

                    b.Property<int>("FKCountry")
                        .HasColumnType("int");

                    b.Property<int>("FKPartyInfo")
                        .HasColumnType("int");

                    b.Property<int>("FKPincode")
                        .HasColumnType("int");

                    b.Property<int>("FKState")
                        .HasColumnType("int");

                    b.Property<int>("FKUnitType")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MailId")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PANNumber")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ShortName")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("FKArea");

                    b.HasIndex("FKCity");

                    b.HasIndex("FKCountry");

                    b.HasIndex("FKPartyInfo");

                    b.HasIndex("FKPincode");

                    b.HasIndex("FKState");

                    b.HasIndex("FKUnitType");

                    b.ToTable("partyInfoDtls");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.MasterTables.PaymentOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CardNoMinLength")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("EnteredSystemId")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsExpiryDateCompulsory")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNameCompulsory")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("paymentOptions");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.MasterTables.SalesPromotionOffer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DiscountPercentage")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("DiscountValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<string>("EnteredSystemId")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<int>("FKOffer")
                        .HasColumnType("int");

                    b.Property<int>("FKParty")
                        .HasColumnType("int");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsExtendable")
                        .HasColumnType("bit");

                    b.Property<decimal>("MaximumDiscountValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("MinimumBillValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OfferName")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FKOffer");

                    b.HasIndex("FKParty");

                    b.ToTable("SalesPromotionOffers");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.MasterTables.Season", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnteredSystemId")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("seasons");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.MasterTables.SizeAssortment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EnteredSystemId")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("FKSizeMaster")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Quantity01")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity02")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity03")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity04")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity05")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity06")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity07")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity08")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity09")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity10")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity11")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity12")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity13")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity14")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity15")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity16")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity17")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity18")
                        .HasColumnType("int");

                    b.Property<decimal?>("Size01")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Size02")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Size03")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Size04")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Size05")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Size06")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Size07")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Size08")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Size09")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Size10")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Size11")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Size12")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Size13")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Size14")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Size15")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Size16")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Size17")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Size18")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TotalQuantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FKSizeMaster");

                    b.ToTable("sizeAssortments");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.MasterTables.SizeMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EnteredSystemId")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("FKSizeCategory")
                        .HasColumnType("int");

                    b.Property<int>("FKSizeFor")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHalfSize")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Size01")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Size02")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Size03")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Size04")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Size05")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Size06")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Size07")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Size08")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Size09")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Size10")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Size11")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Size12")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Size13")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Size14")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Size15")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Size16")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Size17")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Size18")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FKSizeCategory");

                    b.HasIndex("FKSizeFor");

                    b.ToTable("sizeMasters");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.MasterTables.UnitMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Address2")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)");

                    b.Property<int?>("CompanyInfoId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ContactNo")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("ContactPersonName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnteredSystemId")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<int>("FKArea")
                        .HasColumnType("int");

                    b.Property<int>("FKCity")
                        .HasColumnType("int");

                    b.Property<int>("FKCompanyInfo")
                        .HasColumnType("int");

                    b.Property<int>("FKPincode")
                        .HasColumnType("int");

                    b.Property<int>("FKState")
                        .HasColumnType("int");

                    b.Property<int>("FKUnitType")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MailId")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PANNumber")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ShortName")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyInfoId");

                    b.HasIndex("FKArea");

                    b.HasIndex("FKCity");

                    b.HasIndex("FKPincode");

                    b.HasIndex("FKState");

                    b.HasIndex("FKUnitType");

                    b.ToTable("unitMasters");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.TransactionTables.AllTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("BalanceQuantity")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<string>("Colour")
                        .HasColumnType("Varchar(20)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EANCode")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("varchar(13)");

                    b.Property<string>("EnteredSystemId")
                        .HasColumnType("varchar(30)");

                    b.Property<int>("FKArticle")
                        .HasColumnType("int");

                    b.Property<int>("FKFromLocation")
                        .HasColumnType("int");

                    b.Property<int>("FKFromStage")
                        .HasColumnType("int");

                    b.Property<int>("FKFromUnit")
                        .HasColumnType("int");

                    b.Property<int>("FKMaterial")
                        .HasColumnType("int");

                    b.Property<int>("FKQuality")
                        .HasColumnType("int");

                    b.Property<int>("FKStatus")
                        .HasColumnType("int");

                    b.Property<int>("FKToLocation")
                        .HasColumnType("int");

                    b.Property<int>("FKToStage")
                        .HasColumnType("int");

                    b.Property<int>("FKToUnit")
                        .HasColumnType("int");

                    b.Property<int>("FKTranLocation")
                        .HasColumnType("int");

                    b.Property<int>("FKTranUnit")
                        .HasColumnType("int");

                    b.Property<int>("FKUOM")
                        .HasColumnType("int");

                    b.Property<int>("HSNCode")
                        .HasColumnType("int");

                    b.Property<decimal>("InwardQuantity")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MaterialorFinishedProduct")
                        .HasColumnType("varchar(2)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OutwardQuantity")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("Rate")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<string>("Size")
                        .HasColumnType("Varchar(5)");

                    b.Property<string>("StockNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("TranDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TranId")
                        .HasColumnType("int");

                    b.Property<string>("TranRefNo")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("TransactionType")
                        .HasColumnType("varchar(20)");

                    b.Property<decimal>("Value")
                        .HasColumnType("Decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FKQuality");

                    b.HasIndex("FKStatus");

                    b.HasIndex("FKUOM");

                    b.ToTable("AllTransactions");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.TransactionTables.DeliveryChallan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DCDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DCNo")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("DCType")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DifferenceValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("DtlValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<string>("EnteredSystemId")
                        .HasColumnType("varchar(30)");

                    b.Property<int>("FKDCType")
                        .HasColumnType("int");

                    b.Property<int>("FKFromDepartment")
                        .HasColumnType("int");

                    b.Property<int>("FKFromLocation")
                        .HasColumnType("int");

                    b.Property<int>("FKFromState")
                        .HasColumnType("int");

                    b.Property<int>("FKFromUnit")
                        .HasColumnType("int");

                    b.Property<int>("FKModeofTransport")
                        .HasColumnType("int");

                    b.Property<int>("FKSeason")
                        .HasColumnType("int");

                    b.Property<int>("FKToDepartment")
                        .HasColumnType("int");

                    b.Property<int>("FKToLocation")
                        .HasColumnType("int");

                    b.Property<int>("FKToState")
                        .HasColumnType("int");

                    b.Property<int>("FKToUnit")
                        .HasColumnType("int");

                    b.Property<string>("FromDepartment")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("FromLocation")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("FromUnitName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("GSTValues")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("GrossValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<bool>("IsAcknowledged")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEntryCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("MaterialorFinishedProduct")
                        .HasColumnType("varchar(1)");

                    b.Property<string>("ModeofTranspoft")
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("NettValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("OtherExpensesMinus")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("OtherExpensesPlus")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<string>("Remarks")
                        .HasColumnType("Varchar(250)");

                    b.Property<string>("Season")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ToDepartment")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("ToLocation")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("ToUnitName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Value")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<string>("VehicleNo")
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("FKDCType");

                    b.HasIndex("FKFromDepartment");

                    b.HasIndex("FKFromLocation");

                    b.HasIndex("FKFromUnit");

                    b.HasIndex("FKModeofTransport");

                    b.HasIndex("FKSeason");

                    b.HasIndex("FKToDepartment");

                    b.HasIndex("FKToLocation");

                    b.HasIndex("FKToUnit");

                    b.ToTable("DeliveryChallans");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.TransactionTables.DeliveryChallanDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CGSTPercentage")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("CGSTValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<string>("Colour")
                        .HasColumnType("Varchar(20)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DCDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DCNo")
                        .HasColumnType("Varchar(20)");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("Varchar(50)");

                    b.Property<decimal>("DiscountPercentage")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("DiscountValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<string>("EnteredSystemId")
                        .HasColumnType("varchar(30)");

                    b.Property<int>("FKDcNo")
                        .HasColumnType("int");

                    b.Property<int>("FKHSNCode")
                        .HasColumnType("int");

                    b.Property<int>("FKUOM")
                        .HasColumnType("int");

                    b.Property<decimal>("GSTTotalValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("GrossValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<int>("HSNCode")
                        .HasColumnType("int");

                    b.Property<decimal>("IGSTPercentage")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("IGSTValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEntryCompleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("ItemNettValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OthersValuePlus")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("Rate")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("SGSTPercentage")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("SGSTValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<string>("Size")
                        .HasColumnType("Varchar(5)");

                    b.Property<string>("UOM")
                        .HasColumnType("Varchar(20)");

                    b.Property<decimal>("Value")
                        .HasColumnType("Decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FKDcNo");

                    b.HasIndex("FKHSNCode");

                    b.HasIndex("FKUOM");

                    b.ToTable("DeliveryChallanDetails");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.TransactionTables.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BillToCustomerName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Category")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("CustomerName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeliveryToCustomerName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Department")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Destination")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("DispatchedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnteredSystemId")
                        .HasColumnType("varchar(30)");

                    b.Property<decimal>("ExchangeRate")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<int>("FKBillTo")
                        .HasColumnType("int");

                    b.Property<int>("FKCategory")
                        .HasColumnType("int");

                    b.Property<int>("FKCurrency")
                        .HasColumnType("int");

                    b.Property<int>("FKDeliveryTo")
                        .HasColumnType("int");

                    b.Property<int>("FKDepartment")
                        .HasColumnType("int");

                    b.Property<int>("FKDestination")
                        .HasColumnType("int");

                    b.Property<int>("FKFromState")
                        .HasColumnType("int");

                    b.Property<int>("FKLocation")
                        .HasColumnType("int");

                    b.Property<int>("FKModeofTransport")
                        .HasColumnType("int");

                    b.Property<int>("FKNotifyTo")
                        .HasColumnType("int");

                    b.Property<int>("FKParty")
                        .HasColumnType("int");

                    b.Property<int>("FKPaymentTerms")
                        .HasColumnType("int");

                    b.Property<int>("FKSeason")
                        .HasColumnType("int");

                    b.Property<int>("FKToState")
                        .HasColumnType("int");

                    b.Property<int>("FKTypeOfInvoice")
                        .HasColumnType("int");

                    b.Property<int>("FKUnit")
                        .HasColumnType("int");

                    b.Property<decimal>("GSTValues")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<bool>("IncludeBillTo")
                        .HasColumnType("bit");

                    b.Property<bool>("IncludeDeliveryTo")
                        .HasColumnType("bit");

                    b.Property<bool>("IncludeNotifyTo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("InvoiceDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvoiceNo")
                        .HasColumnType("varchar(20)");

                    b.Property<decimal>("InvoiceValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDispatched")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEntryCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("MaterialorFinishedProduct")
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("ModeofTransport")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("NettValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<string>("NotifyToCustomerName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("OtherExpensesMinus")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("OtherExpensesPlus")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<string>("PaymentTerms")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<string>("Remarks")
                        .HasColumnType("Varchar(250)");

                    b.Property<string>("Season")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("TypeofInvoice")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("UnitName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("ValueinINR")
                        .HasColumnType("Decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FKCategory");

                    b.HasIndex("FKCurrency");

                    b.HasIndex("FKDepartment");

                    b.HasIndex("FKDestination");

                    b.HasIndex("FKLocation");

                    b.HasIndex("FKModeofTransport");

                    b.HasIndex("FKParty");

                    b.HasIndex("FKPaymentTerms");

                    b.HasIndex("FKSeason");

                    b.HasIndex("FKTypeOfInvoice");

                    b.HasIndex("FKUnit");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.TransactionTables.InvoiceDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CGSTPercentage")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("CGSTValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<string>("Colour")
                        .HasColumnType("Varchar(20)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("Varchar(50)");

                    b.Property<decimal>("DiscountPercentage")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("DiscountValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<string>("EANCode")
                        .HasMaxLength(13)
                        .HasColumnType("varchar(13)");

                    b.Property<string>("EnteredSystemId")
                        .HasColumnType("varchar(30)");

                    b.Property<int>("FKArticle")
                        .HasColumnType("int");

                    b.Property<int>("FKCustomer")
                        .HasColumnType("int");

                    b.Property<int>("FKIIUom")
                        .HasColumnType("int");

                    b.Property<int>("FKInvoiceNo")
                        .HasColumnType("int");

                    b.Property<int>("FKMaterial")
                        .HasColumnType("int");

                    b.Property<int>("FKUOM")
                        .HasColumnType("int");

                    b.Property<decimal>("GSTTotalValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("GrossValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<int>("HSNCode")
                        .HasColumnType("int");

                    b.Property<decimal>("IGSTPercentage")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("IGSTValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("IIQuantity")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<DateTime>("InvoiceDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvoiceNo")
                        .HasColumnType("varchar(20)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEntryCompleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("ItemNettValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<string>("MaterialorFinishedProduct")
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OthersValueMinus")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("OthersValuePlus")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("Rate")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("SGSTPercentage")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("SGSTValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<string>("Size")
                        .HasColumnType("Varchar(5)");

                    b.Property<string>("StockNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<decimal>("Value")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("ValueinINR")
                        .HasColumnType("Decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FKInvoiceNo");

                    b.HasIndex("FKUOM");

                    b.ToTable("InvoiceDetails");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.TransactionTables.InvoiceToPerson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeliveryToCustomerName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Department")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Destination")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("DispatchedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnteredSystemId")
                        .HasColumnType("varchar(30)");

                    b.Property<decimal>("ExchangeRate")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<int>("FKCategory")
                        .HasColumnType("int");

                    b.Property<int>("FKCurrency")
                        .HasColumnType("int");

                    b.Property<int>("FKDeliveryTo")
                        .HasColumnType("int");

                    b.Property<int>("FKDepartment")
                        .HasColumnType("int");

                    b.Property<int>("FKDestination")
                        .HasColumnType("int");

                    b.Property<int>("FKFromState")
                        .HasColumnType("int");

                    b.Property<int>("FKLocation")
                        .HasColumnType("int");

                    b.Property<int>("FKModeofTransport")
                        .HasColumnType("int");

                    b.Property<int>("FKPaymentTerms")
                        .HasColumnType("int");

                    b.Property<int>("FKPerson")
                        .HasColumnType("int");

                    b.Property<int>("FKSeason")
                        .HasColumnType("int");

                    b.Property<int>("FKToState")
                        .HasColumnType("int");

                    b.Property<int>("FKTypeOfInvoice")
                        .HasColumnType("int");

                    b.Property<int>("FKUnit")
                        .HasColumnType("int");

                    b.Property<decimal>("GSTValues")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<bool>("IncludeDeliveryTo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("InvoiceDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvoiceNo")
                        .HasColumnType("varchar(20)");

                    b.Property<decimal>("InvoiceValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDispatched")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEntryCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("MaterialorFinishedProduct")
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("ModeofTransport")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("NettValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("OtherExpensesMinus")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("OtherExpensesPlus")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<string>("PaymentTerms")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("PersonName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<string>("Remarks")
                        .HasColumnType("Varchar(250)");

                    b.Property<string>("Season")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("TypeofInvoice")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("UnitName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("ValueinINR")
                        .HasColumnType("Decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FKCategory");

                    b.HasIndex("FKCurrency");

                    b.HasIndex("FKDepartment");

                    b.HasIndex("FKDestination");

                    b.HasIndex("FKLocation");

                    b.HasIndex("FKModeofTransport");

                    b.HasIndex("FKPaymentTerms");

                    b.HasIndex("FKPerson");

                    b.HasIndex("FKSeason");

                    b.HasIndex("FKTypeOfInvoice");

                    b.HasIndex("FKUnit");

                    b.ToTable("InvoiceToPersons");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.TransactionTables.InvoiceToPersonDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CGSTPercentage")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("CGSTValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<string>("Colour")
                        .HasColumnType("Varchar(20)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("Varchar(50)");

                    b.Property<decimal>("DiscountPercentage")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("DiscountValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<string>("EANCode")
                        .HasMaxLength(13)
                        .HasColumnType("varchar(13)");

                    b.Property<string>("EnteredSystemId")
                        .HasColumnType("varchar(30)");

                    b.Property<int>("FKArticle")
                        .HasColumnType("int");

                    b.Property<int>("FKCustomer")
                        .HasColumnType("int");

                    b.Property<int>("FKInvoiceNo")
                        .HasColumnType("int");

                    b.Property<int>("FKMaterial")
                        .HasColumnType("int");

                    b.Property<int>("FKUOM")
                        .HasColumnType("int");

                    b.Property<decimal>("GSTTotalValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("GrossValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<int>("HSNCode")
                        .HasColumnType("int");

                    b.Property<decimal>("IGSTPercentage")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("IGSTValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<DateTime>("InvoiceDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvoiceNo")
                        .HasColumnType("varchar(20)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEntryCompleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("ItemNettValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<string>("MaterialorFinishedProduct")
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OthersValueMinus")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("OthersValuePlus")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("Rate")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("SGSTPercentage")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("SGSTValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<string>("Size")
                        .HasColumnType("Varchar(5)");

                    b.Property<string>("StockNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<decimal>("Value")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("ValueinINR")
                        .HasColumnType("Decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FKInvoiceNo");

                    b.HasIndex("FKUOM");

                    b.ToTable("InvoiceToPersonDetails");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.TransactionTables.Inward", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArrivedQuantity")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<decimal>("DifferenceValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<int>("DocumentQuantity")
                        .HasColumnType("int");

                    b.Property<string>("DocumentType")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("EnteredSystemId")
                        .HasColumnType("varchar(30)");

                    b.Property<decimal>("ExchangeRate")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<int>("FKCurrency")
                        .HasColumnType("int");

                    b.Property<int>("FKDepartment")
                        .HasColumnType("int");

                    b.Property<int>("FKDocumentType")
                        .HasColumnType("int");

                    b.Property<int>("FKLocation")
                        .HasColumnType("int");

                    b.Property<int>("FKPOType")
                        .HasColumnType("int");

                    b.Property<int>("FKParty")
                        .HasColumnType("int");

                    b.Property<int>("FKSeason")
                        .HasColumnType("int");

                    b.Property<int>("FKSource")
                        .HasColumnType("int");

                    b.Property<int>("FKUnit")
                        .HasColumnType("int");

                    b.Property<decimal>("GSTValues")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("InvoiceDtlValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("InvoiceGrossValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("InvoiceNettValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<DateTime>("InwardDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("InwardNo")
                        .HasColumnType("varchar(20)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEntryCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("MaterialorFinishedProduct")
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OtherExpensesMinus")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("OtherExpensesPlus")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<string>("POType")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Season")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Source")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime>("SupplierDocumentDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("SupplierDocumentNo")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("SupplierName")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UnitName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("FKCurrency");

                    b.HasIndex("FKDepartment");

                    b.HasIndex("FKDocumentType");

                    b.HasIndex("FKPOType");

                    b.HasIndex("FKParty");

                    b.HasIndex("FKSeason");

                    b.HasIndex("FKSource");

                    b.HasIndex("FKUnit");

                    b.ToTable("inwards");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.TransactionTables.InwardDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CGSTPercentage")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("CGSTValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<string>("Colour")
                        .HasColumnType("Varchar(20)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("Varchar(50)");

                    b.Property<decimal>("DiscountPercentage")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("DiscountValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<string>("EANCode")
                        .HasMaxLength(13)
                        .HasColumnType("varchar(13)");

                    b.Property<string>("EnteredSystemId")
                        .HasColumnType("varchar(30)");

                    b.Property<int>("FKArticle")
                        .HasColumnType("int");

                    b.Property<int>("FKInwardNo")
                        .HasColumnType("int");

                    b.Property<int>("FKMaterial")
                        .HasColumnType("int");

                    b.Property<int>("FKSupplier")
                        .HasColumnType("int");

                    b.Property<decimal>("GSTTotalValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("GrossValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<int>("HSNCode")
                        .HasColumnType("int");

                    b.Property<decimal>("IGSTPercentage")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("IGSTValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("IIQuantity")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<DateTime>("InwardDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("InwardNo")
                        .HasColumnType("varchar(20)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEntryCompleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("ItemNettValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<string>("MaterialorFinishedProduct")
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OthersValuePlus")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("Rate")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("SGSTPercentage")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("SGSTValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<string>("Size")
                        .HasColumnType("Varchar(5)");

                    b.Property<string>("StockNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<decimal>("Value")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("ValueinINR")
                        .HasColumnType("Decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FKInwardNo");

                    b.ToTable("inwardDetails");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.TransactionTables.MaterialPurchaseOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("BalanceQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("CancelledQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Category")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeliveryTo")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Department")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("EnteredSystemId")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<decimal?>("ExchangeRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("FKCategory")
                        .HasColumnType("int");

                    b.Property<int>("FKCurrency")
                        .HasColumnType("int");

                    b.Property<int>("FKDeliveryTo")
                        .HasColumnType("int");

                    b.Property<int>("FKDepartment")
                        .HasColumnType("int");

                    b.Property<int>("FKModeofTransport")
                        .HasColumnType("int");

                    b.Property<int>("FKOrderStatus")
                        .HasColumnType("int");

                    b.Property<int>("FKPOType")
                        .HasColumnType("int");

                    b.Property<int>("FKParty")
                        .HasColumnType("int");

                    b.Property<int>("FKPaymentTerms")
                        .HasColumnType("int");

                    b.Property<int>("FKSeason")
                        .HasColumnType("int");

                    b.Property<int>("FKSource")
                        .HasColumnType("int");

                    b.Property<int>("FKTypeOfOrder")
                        .HasColumnType("int");

                    b.Property<int>("FKUnit")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPOManualClosed")
                        .HasColumnType("bit");

                    b.Property<string>("ModeofTransport")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderStatus")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("POType")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<decimal?>("POValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("POValueinINR")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PaymentTerms")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime>("PurchaseOrderDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("PurchaseOrderNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<decimal?>("RecievedQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Season")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Source")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("SupplierName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("TotalOrderQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TypeofOrder")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("UnitName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("FKCategory");

                    b.HasIndex("FKCurrency");

                    b.HasIndex("FKDeliveryTo");

                    b.HasIndex("FKDepartment");

                    b.HasIndex("FKModeofTransport");

                    b.HasIndex("FKOrderStatus");

                    b.HasIndex("FKPOType");

                    b.HasIndex("FKParty");

                    b.HasIndex("FKPaymentTerms");

                    b.HasIndex("FKSeason");

                    b.HasIndex("FKSource");

                    b.HasIndex("FKTypeOfOrder");

                    b.HasIndex("FKUnit");

                    b.ToTable("materialPurchaseOrders");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.TransactionTables.MaterialPurchaseOrderDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("BalanceQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CancelledQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnteredSystemId")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<int>("FKMaterial")
                        .HasColumnType("int");

                    b.Property<int>("FKOrderStatus")
                        .HasColumnType("int");

                    b.Property<int>("FKPurchaseOrder")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPartDeliveryAllowed")
                        .HasColumnType("bit");

                    b.Property<string>("Material")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderReferenceNo")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("OrderStatus")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("PurchaseOrderNo")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ReceivedQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UOM")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FKMaterial");

                    b.HasIndex("FKOrderStatus");

                    b.HasIndex("FKPurchaseOrder");

                    b.ToTable("materialPurchaseOrderDetails");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.TransactionTables.PurchaseOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BalanceQuantity")
                        .HasColumnType("int");

                    b.Property<int?>("CancelledQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EnteredQuantity")
                        .HasColumnType("int");

                    b.Property<string>("EnteredSystemId")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<decimal?>("ExchangeRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("FKCategory")
                        .HasColumnType("int");

                    b.Property<int>("FKCurrency")
                        .HasColumnType("int");

                    b.Property<int>("FKOrderStatus")
                        .HasColumnType("int");

                    b.Property<int>("FKParty")
                        .HasColumnType("int");

                    b.Property<int>("FKPaymentTerms")
                        .HasColumnType("int");

                    b.Property<int>("FKSeason")
                        .HasColumnType("int");

                    b.Property<int>("FKSource")
                        .HasColumnType("int");

                    b.Property<int>("FKTypeOfOrder")
                        .HasColumnType("int");

                    b.Property<int>("FKUnit")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsArticleStockGenerated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAssortmentOrder")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPOManualClosed")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderStatus")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<decimal?>("POValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("POValueinINR")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PaymentTerms")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime>("PurchaseOrderDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("PurchaseOrderNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)");

                    b.Property<int?>("ReceivedQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Season")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Source")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("SupplierName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("TotalOrderQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TypeofOrder")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("UnitName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("FKCategory");

                    b.HasIndex("FKCurrency");

                    b.HasIndex("FKOrderStatus");

                    b.HasIndex("FKParty");

                    b.HasIndex("FKPaymentTerms");

                    b.HasIndex("FKSeason");

                    b.HasIndex("FKSource");

                    b.HasIndex("FKTypeOfOrder");

                    b.HasIndex("FKUnit");

                    b.ToTable("purchaseOrders");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.TransactionTables.PurchaseOrderDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArticleColor")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("ArticleDescription")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ArticleGroup")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("BalanceQuantity")
                        .HasColumnType("int");

                    b.Property<int>("CancelledQuantity")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnteredSystemId")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<int>("FKArticle")
                        .HasColumnType("int");

                    b.Property<int>("FKAssortmentId")
                        .HasColumnType("int");

                    b.Property<int>("FKOrderStatus")
                        .HasColumnType("int");

                    b.Property<int>("FKPurchaseOrderMain")
                        .HasColumnType("int");

                    b.Property<int>("FKUOM")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPartDeliveryAllowed")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NoofCartons")
                        .HasColumnType("int");

                    b.Property<string>("OrderReferenceNo")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("OrderStatus")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("PurchaseOrderDtlNo")
                        .HasMaxLength(22)
                        .HasColumnType("varchar(22)");

                    b.Property<string>("PurchaseOrderMainNo")
                        .HasMaxLength(18)
                        .HasColumnType("varchar(18)");

                    b.Property<string>("PurchaseOrderNo")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<int?>("Quantity01")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity02")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity03")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity04")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity05")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity06")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity07")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity08")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity09")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity10")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity11")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity12")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity13")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity14")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity15")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity16")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity17")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity18")
                        .HasColumnType("int");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ReceivedQuantity")
                        .HasColumnType("int");

                    b.Property<decimal?>("Size01")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Size02")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Size03")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Size04")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Size05")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Size06")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Size07")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Size08")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Size09")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Size10")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Size11")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Size12")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Size13")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Size14")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Size15")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Size16")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Size17")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Size18")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TotalOrderQuantity")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FKArticle");

                    b.HasIndex("FKOrderStatus");

                    b.HasIndex("FKPurchaseOrderMain");

                    b.ToTable("purchaseOrderDetails");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.TransactionTables.PurchaseOrderMain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Article")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("ArticleGroup")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("BalanceQuantity")
                        .HasColumnType("int");

                    b.Property<int>("CancelledQuantity")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeliveryLocation")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DeliveryTo")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Destination")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("EnteredQuantity")
                        .HasColumnType("int");

                    b.Property<string>("EnteredSystemId")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<int>("FKArticleGroup")
                        .HasColumnType("int");

                    b.Property<int>("FKDeliveryLocation")
                        .HasColumnType("int");

                    b.Property<int>("FKDeliveryTo")
                        .HasColumnType("int");

                    b.Property<int>("FKDestination")
                        .HasColumnType("int");

                    b.Property<int>("FKModeofTransport")
                        .HasColumnType("int");

                    b.Property<int>("FKOrderStatus")
                        .HasColumnType("int");

                    b.Property<int>("FKPurchaseOrder")
                        .HasColumnType("int");

                    b.Property<int>("FKSizeMaster")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPartDeliveryAllowed")
                        .HasColumnType("bit");

                    b.Property<string>("ModeofTransport")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderReferenceNo")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("OrderStatus")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("PurchaseOrderMainNo")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("PurchaseOrderNo")
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)");

                    b.Property<int>("ReceivedQuantity")
                        .HasColumnType("int");

                    b.Property<string>("SizeCode")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("TotalOrderQuantity")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FKArticleGroup");

                    b.HasIndex("FKDeliveryTo");

                    b.HasIndex("FKDestination");

                    b.HasIndex("FKModeofTransport");

                    b.HasIndex("FKOrderStatus");

                    b.HasIndex("FKPurchaseOrder");

                    b.HasIndex("FKSizeMaster");

                    b.ToTable("purchaseOrderMains");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.TransactionTables.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Colour")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("DiscountPercentageforSales")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<string>("EANCode")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("varchar(13)");

                    b.Property<string>("EnteredSystemId")
                        .HasColumnType("varchar(30)");

                    b.Property<decimal>("ExchangeRate")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<int>("FKArticleDetail")
                        .HasColumnType("int");

                    b.Property<int>("FKCurrency")
                        .HasColumnType("int");

                    b.Property<int>("FKHSNCode")
                        .HasColumnType("int");

                    b.Property<int>("FKIIUOM")
                        .HasColumnType("int");

                    b.Property<int>("FKLocation")
                        .HasColumnType("int");

                    b.Property<int>("FKMaterial")
                        .HasColumnType("int");

                    b.Property<int>("FKQuality")
                        .HasColumnType("int");

                    b.Property<int>("FKSource")
                        .HasColumnType("int");

                    b.Property<int>("FKStage")
                        .HasColumnType("int");

                    b.Property<int>("FKStatus")
                        .HasColumnType("int");

                    b.Property<int>("FKSupplier")
                        .HasColumnType("int");

                    b.Property<int>("FKUOM")
                        .HasColumnType("int");

                    b.Property<int>("FKUnit")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("LandedCost")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("LandedRate")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<DateTime>("LastTranDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MRP")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<string>("MaterialorFinishedProduct")
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderReferenceNo")
                        .HasColumnType("varchar(20)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("Rate")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<string>("Size")
                        .HasColumnType("varchar(5)");

                    b.Property<DateTime>("StockInitiatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StockNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<decimal>("Value")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("ValueInINR")
                        .HasColumnType("Decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FKCurrency");

                    b.HasIndex("FKLocation");

                    b.HasIndex("FKQuality");

                    b.HasIndex("FKSource");

                    b.HasIndex("FKStage");

                    b.HasIndex("FKStatus");

                    b.HasIndex("FKUOM");

                    b.HasIndex("FKUnit");

                    b.ToTable("stocks");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.TransactionTables.StockTransfer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DifferenceValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("DtlValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<string>("EnteredSystemId")
                        .HasColumnType("varchar(30)");

                    b.Property<int>("FKFromDepartment")
                        .HasColumnType("int");

                    b.Property<int>("FKFromLocation")
                        .HasColumnType("int");

                    b.Property<int>("FKFromState")
                        .HasColumnType("int");

                    b.Property<int>("FKFromUnit")
                        .HasColumnType("int");

                    b.Property<int>("FKOutwardType")
                        .HasColumnType("int");

                    b.Property<int>("FKSeason")
                        .HasColumnType("int");

                    b.Property<int>("FKToDepartment")
                        .HasColumnType("int");

                    b.Property<int>("FKToLocation")
                        .HasColumnType("int");

                    b.Property<int>("FKToState")
                        .HasColumnType("int");

                    b.Property<int>("FKToUnit")
                        .HasColumnType("int");

                    b.Property<string>("FromDepartment")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("FromLocation")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("FromUnitName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("GSTValues")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("GrossValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<bool>("IsAcknowledged")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEntryCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("MaterialorFinishedProduct")
                        .HasColumnType("varchar(1)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("NettValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("OtherExpensesMinus")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("OtherExpensesPlus")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<string>("OutwardType")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<decimal>("ReceivedQty")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<string>("Remarks")
                        .HasColumnType("Varchar(250)");

                    b.Property<DateTime>("STDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("STNo")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Season")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ToDepartment")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("ToLocation")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("ToUnitName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("TransferredQty")
                        .HasColumnType("Decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FKFromDepartment");

                    b.HasIndex("FKFromLocation");

                    b.HasIndex("FKFromUnit");

                    b.HasIndex("FKOutwardType");

                    b.HasIndex("FKSeason");

                    b.HasIndex("FKToDepartment");

                    b.HasIndex("FKToLocation");

                    b.HasIndex("FKToUnit");

                    b.ToTable("StockTransfers");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.TransactionTables.StockTransferDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CGSTPercentage")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("CGSTValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<string>("Colour")
                        .HasColumnType("Varchar(20)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("Varchar(50)");

                    b.Property<decimal>("DifferenceQuantity")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("DispatchedQuantity")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<string>("EANCode")
                        .HasMaxLength(13)
                        .HasColumnType("varchar(13)");

                    b.Property<string>("EnteredSystemId")
                        .HasColumnType("varchar(30)");

                    b.Property<int>("FKArticleDetail")
                        .HasColumnType("int");

                    b.Property<int>("FKIIUom")
                        .HasColumnType("int");

                    b.Property<int>("FKMaterial")
                        .HasColumnType("int");

                    b.Property<int>("FKSTNo")
                        .HasColumnType("int");

                    b.Property<int>("FKUOM")
                        .HasColumnType("int");

                    b.Property<decimal>("GSTTotalValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<int>("HSNCode")
                        .HasColumnType("int");

                    b.Property<decimal>("IGSTPercentage")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("IGSTValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("IIQuantity")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<bool>("IsAcknowledged")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEntryCompleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("ItemNettValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<string>("MaterialorFinishedProduct")
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OthersValueMinus")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("OthersValuePlus")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("Rate")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("ReceivedQuantity")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("SGSTPercentage")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("SGSTValue")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<DateTime>("STDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("STNo")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Size")
                        .HasColumnType("Varchar(5)");

                    b.Property<string>("StockNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<decimal>("Value")
                        .HasColumnType("Decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FKSTNo");

                    b.HasIndex("FKUOM");

                    b.ToTable("StockTransferDetails");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.TransactionTables.StockWithArticle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArrivedQty")
                        .HasColumnType("int");

                    b.Property<string>("ArticleDescription")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("ArticleName")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("ArticleNo")
                        .HasColumnType("varchar(30)");

                    b.Property<int>("BalQty")
                        .HasColumnType("int");

                    b.Property<string>("Brand")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Category")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("ColorDescription")
                        .HasColumnType("varchar(30)");

                    b.Property<decimal>("CostPrice")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<DateTime>("DOM")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DealerPrice")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<string>("Dept")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("EANCode")
                        .HasColumnType("varchar(30)");

                    b.Property<int>("FKArticleDetailId")
                        .HasColumnType("int");

                    b.Property<int>("FKOrderDetailId")
                        .HasColumnType("int");

                    b.Property<string>("Group")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("varchar(60)");

                    b.Property<DateTime>("LastTranDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LeatherType")
                        .HasColumnType("varchar(30)");

                    b.Property<decimal>("MRP")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<string>("Product")
                        .HasColumnType("varchar(30)");

                    b.Property<decimal>("ProductTax")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("SICM")
                        .HasColumnType("varchar(30)");

                    b.Property<decimal>("Size")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<int>("SoldQty")
                        .HasColumnType("int");

                    b.Property<DateTime>("StockInitiatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StockNo")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Type")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Variant")
                        .HasColumnType("varchar(2)");

                    b.Property<string>("Vendor")
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("stockWithArticles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OptimizerBeta3.Models.MasterTables.ArticleDetail", b =>
                {
                    b.HasOne("OptimizerBeta3.Models.MasterTables.ArticleGroup", "ArticleGroup")
                        .WithMany()
                        .HasForeignKey("FKArticleGroup")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterCategory")
                        .WithMany()
                        .HasForeignKey("FKCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.ColorMaster", "ColorMaster")
                        .WithMany()
                        .HasForeignKey("FKColour")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterEntryType")
                        .WithMany()
                        .HasForeignKey("FKEntryType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterFeatures")
                        .WithMany()
                        .HasForeignKey("FKFeatures")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.HSNCodeMaster", "HSNCodeMaster")
                        .WithMany()
                        .HasForeignKey("FKHSNCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterLeather")
                        .WithMany()
                        .HasForeignKey("FKLeather")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.ColorMaster", "LiningColorMaster")
                        .WithMany()
                        .HasForeignKey("FKLiningColour")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.ColorMaster", "SocksColorMaster")
                        .WithMany()
                        .HasForeignKey("FKSocksColour")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.ColorMaster", "SoleColorMaster")
                        .WithMany()
                        .HasForeignKey("FKSoleColour")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ArticleGroup");

                    b.Navigation("ColorMaster");

                    b.Navigation("HSNCodeMaster");

                    b.Navigation("LiningColorMaster");

                    b.Navigation("LookUpMasterCategory");

                    b.Navigation("LookUpMasterEntryType");

                    b.Navigation("LookUpMasterFeatures");

                    b.Navigation("LookUpMasterLeather");

                    b.Navigation("SocksColorMaster");

                    b.Navigation("SoleColorMaster");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.MasterTables.ArticleGroup", b =>
                {
                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterBrand")
                        .WithMany()
                        .HasForeignKey("FKBrand")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterCategory")
                        .WithMany()
                        .HasForeignKey("FKCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterGroup")
                        .WithMany()
                        .HasForeignKey("FKGroup")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterProduct")
                        .WithMany()
                        .HasForeignKey("FKProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.Season", "FKSeasonCode")
                        .WithMany()
                        .HasForeignKey("FKSeason")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterSizeFor")
                        .WithMany()
                        .HasForeignKey("FKSizeFor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FKSeasonCode");

                    b.Navigation("LookUpMasterBrand");

                    b.Navigation("LookUpMasterCategory");

                    b.Navigation("LookUpMasterGroup");

                    b.Navigation("LookUpMasterProduct");

                    b.Navigation("LookUpMasterSizeFor");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.MasterTables.Bank", b =>
                {
                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterBank")
                        .WithMany()
                        .HasForeignKey("FKBankName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LookUpMasterBank");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.MasterTables.ColorMaster", b =>
                {
                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterColour")
                        .WithMany()
                        .HasForeignKey("FKColour")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LookUpMasterColour");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.MasterTables.CompanyInfo", b =>
                {
                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterArea")
                        .WithMany()
                        .HasForeignKey("FKArea")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterCity")
                        .WithMany()
                        .HasForeignKey("FKCity")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterPincode")
                        .WithMany()
                        .HasForeignKey("FKPincode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.MdlStateMaster", "StateMaster")
                        .WithMany()
                        .HasForeignKey("FKState")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LookUpMasterArea");

                    b.Navigation("LookUpMasterCity");

                    b.Navigation("LookUpMasterPincode");

                    b.Navigation("StateMaster");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.MasterTables.CustomerPerson", b =>
                {
                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterArea")
                        .WithMany()
                        .HasForeignKey("FKArea")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterCity")
                        .WithMany()
                        .HasForeignKey("FKCity")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterCountry")
                        .WithMany()
                        .HasForeignKey("FKCountry")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterCustomerOf")
                        .WithMany()
                        .HasForeignKey("FKCustomerOf")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterPincode")
                        .WithMany()
                        .HasForeignKey("FKPincode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.MdlStateMaster", "StateMaster")
                        .WithMany()
                        .HasForeignKey("FKState")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LookUpMasterArea");

                    b.Navigation("LookUpMasterCity");

                    b.Navigation("LookUpMasterCountry");

                    b.Navigation("LookUpMasterCustomerOf");

                    b.Navigation("LookUpMasterPincode");

                    b.Navigation("StateMaster");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.MasterTables.Filter", b =>
                {
                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpCategory", "FKLookUPCategoryId")
                        .WithMany()
                        .HasForeignKey("FKLookUpCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "FKLookUPMasterId")
                        .WithMany()
                        .HasForeignKey("FKLookUpMaster")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FKLookUPCategoryId");

                    b.Navigation("FKLookUPMasterId");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.MasterTables.HSNCodeMaster", b =>
                {
                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterPercentageType")
                        .WithMany()
                        .HasForeignKey("FKPercentageType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LookUpMasterPercentageType");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.MasterTables.Locations", b =>
                {
                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterLocationType")
                        .WithMany()
                        .HasForeignKey("FKLocationType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.UnitMaster", "UnitMaster")
                        .WithMany()
                        .HasForeignKey("FKUnitDtls")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LookUpMasterLocationType");

                    b.Navigation("UnitMaster");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.MasterTables.LookUpMaster", b =>
                {
                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpCategory", "LookUpCategory")
                        .WithMany()
                        .HasForeignKey("FKLookUpCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LookUpCategory");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.MasterTables.MaterialDetails", b =>
                {
                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterCurrency")
                        .WithMany()
                        .HasForeignKey("FKCurrency")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.Materials", "Materials")
                        .WithMany()
                        .HasForeignKey("FKMaterial")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.PartyInfo", "PartyInfo")
                        .WithMany()
                        .HasForeignKey("FKParty")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LookUpMasterCurrency");

                    b.Navigation("Materials");

                    b.Navigation("PartyInfo");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.MasterTables.Materials", b =>
                {
                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterBrand")
                        .WithMany()
                        .HasForeignKey("FKBrand")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterCategory")
                        .WithMany()
                        .HasForeignKey("FKCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterColour")
                        .WithMany()
                        .HasForeignKey("FKColour")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterSource")
                        .WithMany()
                        .HasForeignKey("FKSource")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterSubType")
                        .WithMany()
                        .HasForeignKey("FKSubType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterType")
                        .WithMany()
                        .HasForeignKey("FKType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterUOM")
                        .WithMany()
                        .HasForeignKey("FKUom")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LookUpMasterBrand");

                    b.Navigation("LookUpMasterCategory");

                    b.Navigation("LookUpMasterColour");

                    b.Navigation("LookUpMasterSource");

                    b.Navigation("LookUpMasterSubType");

                    b.Navigation("LookUpMasterType");

                    b.Navigation("LookUpMasterUOM");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.MasterTables.OfferDetails", b =>
                {
                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterAnniverseryInfo")
                        .WithMany()
                        .HasForeignKey("FKAnniverseryInfo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.Offers", "Offers")
                        .WithMany()
                        .HasForeignKey("FKOffer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LookUpMasterAnniverseryInfo");

                    b.Navigation("Offers");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.MasterTables.Offers", b =>
                {
                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterOffer")
                        .WithMany()
                        .HasForeignKey("FKOffer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterCategory")
                        .WithMany()
                        .HasForeignKey("FKOfferCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LookUpMasterCategory");

                    b.Navigation("LookUpMasterOffer");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.MasterTables.PartyInfo", b =>
                {
                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterArea")
                        .WithMany()
                        .HasForeignKey("FKArea")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterCategory")
                        .WithMany()
                        .HasForeignKey("FKCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterCity")
                        .WithMany()
                        .HasForeignKey("FKCity")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterCountry")
                        .WithMany()
                        .HasForeignKey("FKCountry")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterPincode")
                        .WithMany()
                        .HasForeignKey("FKPincode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.MdlStateMaster", "StateMaster")
                        .WithMany()
                        .HasForeignKey("FKState")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LookUpMasterArea");

                    b.Navigation("LookUpMasterCategory");

                    b.Navigation("LookUpMasterCity");

                    b.Navigation("LookUpMasterCountry");

                    b.Navigation("LookUpMasterPincode");

                    b.Navigation("StateMaster");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.MasterTables.PartyInfoDtls", b =>
                {
                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterArea")
                        .WithMany()
                        .HasForeignKey("FKArea")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterCity")
                        .WithMany()
                        .HasForeignKey("FKCity")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterCountry")
                        .WithMany()
                        .HasForeignKey("FKCountry")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.PartyInfo", "PartyInfo")
                        .WithMany()
                        .HasForeignKey("FKPartyInfo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterPincode")
                        .WithMany()
                        .HasForeignKey("FKPincode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.MdlStateMaster", "StateMaster")
                        .WithMany()
                        .HasForeignKey("FKState")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterUnitType")
                        .WithMany()
                        .HasForeignKey("FKUnitType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LookUpMasterArea");

                    b.Navigation("LookUpMasterCity");

                    b.Navigation("LookUpMasterCountry");

                    b.Navigation("LookUpMasterPincode");

                    b.Navigation("LookUpMasterUnitType");

                    b.Navigation("PartyInfo");

                    b.Navigation("StateMaster");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.MasterTables.SalesPromotionOffer", b =>
                {
                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterOffer")
                        .WithMany()
                        .HasForeignKey("FKOffer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.PartyInfo", "Party")
                        .WithMany()
                        .HasForeignKey("FKParty")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LookUpMasterOffer");

                    b.Navigation("Party");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.MasterTables.SizeAssortment", b =>
                {
                    b.HasOne("OptimizerBeta3.Models.MasterTables.SizeMaster", "SizeMaster")
                        .WithMany()
                        .HasForeignKey("FKSizeMaster")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SizeMaster");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.MasterTables.SizeMaster", b =>
                {
                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpSizeCategory")
                        .WithMany()
                        .HasForeignKey("FKSizeCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpSizeFor")
                        .WithMany()
                        .HasForeignKey("FKSizeFor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LookUpSizeCategory");

                    b.Navigation("LookUpSizeFor");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.MasterTables.UnitMaster", b =>
                {
                    b.HasOne("OptimizerBeta3.Models.MasterTables.CompanyInfo", "CompanyInfo")
                        .WithMany()
                        .HasForeignKey("CompanyInfoId");

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterArea")
                        .WithMany()
                        .HasForeignKey("FKArea")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterCity")
                        .WithMany()
                        .HasForeignKey("FKCity")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterPincode")
                        .WithMany()
                        .HasForeignKey("FKPincode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.MdlStateMaster", "StateMaster")
                        .WithMany()
                        .HasForeignKey("FKState")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterUnitType")
                        .WithMany()
                        .HasForeignKey("FKUnitType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyInfo");

                    b.Navigation("LookUpMasterArea");

                    b.Navigation("LookUpMasterCity");

                    b.Navigation("LookUpMasterPincode");

                    b.Navigation("LookUpMasterUnitType");

                    b.Navigation("StateMaster");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.TransactionTables.AllTransaction", b =>
                {
                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterQuality")
                        .WithMany()
                        .HasForeignKey("FKQuality")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterStatus")
                        .WithMany()
                        .HasForeignKey("FKStatus")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterUOM")
                        .WithMany()
                        .HasForeignKey("FKUOM")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LookUpMasterQuality");

                    b.Navigation("LookUpMasterStatus");

                    b.Navigation("LookUpMasterUOM");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.TransactionTables.DeliveryChallan", b =>
                {
                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterFKDCType")
                        .WithMany()
                        .HasForeignKey("FKDCType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterFromDepartment")
                        .WithMany()
                        .HasForeignKey("FKFromDepartment")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterFromLocation")
                        .WithMany()
                        .HasForeignKey("FKFromLocation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.UnitMaster", "FromUnit")
                        .WithMany()
                        .HasForeignKey("FKFromUnit")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterModeofTransport")
                        .WithMany()
                        .HasForeignKey("FKModeofTransport")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.Season", "SeasonCode")
                        .WithMany()
                        .HasForeignKey("FKSeason")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterToDepartment")
                        .WithMany()
                        .HasForeignKey("FKToDepartment")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterToLocation")
                        .WithMany()
                        .HasForeignKey("FKToLocation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.UnitMaster", "ToUnit")
                        .WithMany()
                        .HasForeignKey("FKToUnit")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FromUnit");

                    b.Navigation("LookUpMasterFKDCType");

                    b.Navigation("LookUpMasterFromDepartment");

                    b.Navigation("LookUpMasterFromLocation");

                    b.Navigation("LookUpMasterModeofTransport");

                    b.Navigation("LookUpMasterToDepartment");

                    b.Navigation("LookUpMasterToLocation");

                    b.Navigation("SeasonCode");

                    b.Navigation("ToUnit");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.TransactionTables.DeliveryChallanDetail", b =>
                {
                    b.HasOne("OptimizerBeta3.Models.TransactionTables.DeliveryChallan", "DeliveryChallan")
                        .WithMany()
                        .HasForeignKey("FKDcNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.HSNCodeMaster", "HSNCodeMaster")
                        .WithMany()
                        .HasForeignKey("FKHSNCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterUOM")
                        .WithMany()
                        .HasForeignKey("FKUOM")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeliveryChallan");

                    b.Navigation("HSNCodeMaster");

                    b.Navigation("LookUpMasterUOM");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.TransactionTables.Invoice", b =>
                {
                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterInvoiceCategory")
                        .WithMany()
                        .HasForeignKey("FKCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterCurrency")
                        .WithMany()
                        .HasForeignKey("FKCurrency")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterDepartment")
                        .WithMany()
                        .HasForeignKey("FKDepartment")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterDestination")
                        .WithMany()
                        .HasForeignKey("FKDestination")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.Locations", "LocationID")
                        .WithMany()
                        .HasForeignKey("FKLocation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterModeofTransport")
                        .WithMany()
                        .HasForeignKey("FKModeofTransport")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.PartyInfo", "Party")
                        .WithMany()
                        .HasForeignKey("FKParty")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterPaymentTerms")
                        .WithMany()
                        .HasForeignKey("FKPaymentTerms")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.Season", "FKSeasonCode")
                        .WithMany()
                        .HasForeignKey("FKSeason")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterInvoiceType")
                        .WithMany()
                        .HasForeignKey("FKTypeOfInvoice")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.UnitMaster", "Unit")
                        .WithMany()
                        .HasForeignKey("FKUnit")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FKSeasonCode");

                    b.Navigation("LocationID");

                    b.Navigation("LookUpMasterCurrency");

                    b.Navigation("LookUpMasterDepartment");

                    b.Navigation("LookUpMasterDestination");

                    b.Navigation("LookUpMasterInvoiceCategory");

                    b.Navigation("LookUpMasterInvoiceType");

                    b.Navigation("LookUpMasterModeofTransport");

                    b.Navigation("LookUpMasterPaymentTerms");

                    b.Navigation("Party");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.TransactionTables.InvoiceDetail", b =>
                {
                    b.HasOne("OptimizerBeta3.Models.TransactionTables.Invoice", "Invoice")
                        .WithMany()
                        .HasForeignKey("FKInvoiceNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterUOM")
                        .WithMany()
                        .HasForeignKey("FKUOM")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoice");

                    b.Navigation("LookUpMasterUOM");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.TransactionTables.InvoiceToPerson", b =>
                {
                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterInvoiceCategory")
                        .WithMany()
                        .HasForeignKey("FKCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterCurrency")
                        .WithMany()
                        .HasForeignKey("FKCurrency")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterDepartment")
                        .WithMany()
                        .HasForeignKey("FKDepartment")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterDestination")
                        .WithMany()
                        .HasForeignKey("FKDestination")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.Locations", "LocationID")
                        .WithMany()
                        .HasForeignKey("FKLocation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterModeofTransport")
                        .WithMany()
                        .HasForeignKey("FKModeofTransport")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterPaymentTerms")
                        .WithMany()
                        .HasForeignKey("FKPaymentTerms")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.CustomerPerson", "FKPersonName")
                        .WithMany()
                        .HasForeignKey("FKPerson")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.Season", "FKSeasonCode")
                        .WithMany()
                        .HasForeignKey("FKSeason")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterInvoiceType")
                        .WithMany()
                        .HasForeignKey("FKTypeOfInvoice")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.UnitMaster", "Unit")
                        .WithMany()
                        .HasForeignKey("FKUnit")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FKPersonName");

                    b.Navigation("FKSeasonCode");

                    b.Navigation("LocationID");

                    b.Navigation("LookUpMasterCurrency");

                    b.Navigation("LookUpMasterDepartment");

                    b.Navigation("LookUpMasterDestination");

                    b.Navigation("LookUpMasterInvoiceCategory");

                    b.Navigation("LookUpMasterInvoiceType");

                    b.Navigation("LookUpMasterModeofTransport");

                    b.Navigation("LookUpMasterPaymentTerms");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.TransactionTables.InvoiceToPersonDetail", b =>
                {
                    b.HasOne("OptimizerBeta3.Models.TransactionTables.InvoiceToPerson", "Invoice")
                        .WithMany()
                        .HasForeignKey("FKInvoiceNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterUOM")
                        .WithMany()
                        .HasForeignKey("FKUOM")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoice");

                    b.Navigation("LookUpMasterUOM");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.TransactionTables.Inward", b =>
                {
                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterCurrency")
                        .WithMany()
                        .HasForeignKey("FKCurrency")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterDepartment")
                        .WithMany()
                        .HasForeignKey("FKDepartment")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterDocumentType")
                        .WithMany()
                        .HasForeignKey("FKDocumentType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterPOType")
                        .WithMany()
                        .HasForeignKey("FKPOType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.PartyInfo", "Party")
                        .WithMany()
                        .HasForeignKey("FKParty")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.Season", "FKSeasonCode")
                        .WithMany()
                        .HasForeignKey("FKSeason")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterSource")
                        .WithMany()
                        .HasForeignKey("FKSource")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.UnitMaster", "Unit")
                        .WithMany()
                        .HasForeignKey("FKUnit")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FKSeasonCode");

                    b.Navigation("LookUpMasterCurrency");

                    b.Navigation("LookUpMasterDepartment");

                    b.Navigation("LookUpMasterDocumentType");

                    b.Navigation("LookUpMasterPOType");

                    b.Navigation("LookUpMasterSource");

                    b.Navigation("Party");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.TransactionTables.InwardDetails", b =>
                {
                    b.HasOne("OptimizerBeta3.Models.TransactionTables.Inward", "Inward")
                        .WithMany()
                        .HasForeignKey("FKInwardNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inward");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.TransactionTables.MaterialPurchaseOrder", b =>
                {
                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterCategory")
                        .WithMany()
                        .HasForeignKey("FKCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterCurrency")
                        .WithMany()
                        .HasForeignKey("FKCurrency")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.UnitMaster", "UnitMasterDeliveryTo")
                        .WithMany()
                        .HasForeignKey("FKDeliveryTo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterDepartment")
                        .WithMany()
                        .HasForeignKey("FKDepartment")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterModeofTransport")
                        .WithMany()
                        .HasForeignKey("FKModeofTransport")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterPOStatus")
                        .WithMany()
                        .HasForeignKey("FKOrderStatus")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterPOType")
                        .WithMany()
                        .HasForeignKey("FKPOType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.PartyInfo", "PartyInfo")
                        .WithMany()
                        .HasForeignKey("FKParty")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterPaymentTerms")
                        .WithMany()
                        .HasForeignKey("FKPaymentTerms")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.Season", "FKSeasonCode")
                        .WithMany()
                        .HasForeignKey("FKSeason")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterSource")
                        .WithMany()
                        .HasForeignKey("FKSource")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterTypeOfOrder")
                        .WithMany()
                        .HasForeignKey("FKTypeOfOrder")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.UnitMaster", "UnitMaster")
                        .WithMany()
                        .HasForeignKey("FKUnit")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FKSeasonCode");

                    b.Navigation("LookUpMasterCategory");

                    b.Navigation("LookUpMasterCurrency");

                    b.Navigation("LookUpMasterDepartment");

                    b.Navigation("LookUpMasterModeofTransport");

                    b.Navigation("LookUpMasterPaymentTerms");

                    b.Navigation("LookUpMasterPOStatus");

                    b.Navigation("LookUpMasterPOType");

                    b.Navigation("LookUpMasterSource");

                    b.Navigation("LookUpMasterTypeOfOrder");

                    b.Navigation("PartyInfo");

                    b.Navigation("UnitMaster");

                    b.Navigation("UnitMasterDeliveryTo");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.TransactionTables.MaterialPurchaseOrderDetails", b =>
                {
                    b.HasOne("OptimizerBeta3.Models.MasterTables.Materials", "MaterialId")
                        .WithMany()
                        .HasForeignKey("FKMaterial")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterPOStatus")
                        .WithMany()
                        .HasForeignKey("FKOrderStatus")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.TransactionTables.MaterialPurchaseOrder", "MaterialPurchaseOrder")
                        .WithMany()
                        .HasForeignKey("FKPurchaseOrder")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LookUpMasterPOStatus");

                    b.Navigation("MaterialId");

                    b.Navigation("MaterialPurchaseOrder");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.TransactionTables.PurchaseOrder", b =>
                {
                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterCategory")
                        .WithMany()
                        .HasForeignKey("FKCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterCurrency")
                        .WithMany()
                        .HasForeignKey("FKCurrency")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterPOStatus")
                        .WithMany()
                        .HasForeignKey("FKOrderStatus")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.PartyInfo", "PartyInfo")
                        .WithMany()
                        .HasForeignKey("FKParty")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterPaymentTerms")
                        .WithMany()
                        .HasForeignKey("FKPaymentTerms")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.Season", "FKSeasonCode")
                        .WithMany()
                        .HasForeignKey("FKSeason")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterSource")
                        .WithMany()
                        .HasForeignKey("FKSource")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterTypeOfOrder")
                        .WithMany()
                        .HasForeignKey("FKTypeOfOrder")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.UnitMaster", "UnitMaster")
                        .WithMany()
                        .HasForeignKey("FKUnit")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FKSeasonCode");

                    b.Navigation("LookUpMasterCategory");

                    b.Navigation("LookUpMasterCurrency");

                    b.Navigation("LookUpMasterPaymentTerms");

                    b.Navigation("LookUpMasterPOStatus");

                    b.Navigation("LookUpMasterSource");

                    b.Navigation("LookUpMasterTypeOfOrder");

                    b.Navigation("PartyInfo");

                    b.Navigation("UnitMaster");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.TransactionTables.PurchaseOrderDetails", b =>
                {
                    b.HasOne("OptimizerBeta3.Models.MasterTables.ArticleDetail", "GetArticle")
                        .WithMany()
                        .HasForeignKey("FKArticle")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterPOStatus")
                        .WithMany()
                        .HasForeignKey("FKOrderStatus")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.TransactionTables.PurchaseOrderMain", "PurchaseOrderMain")
                        .WithMany()
                        .HasForeignKey("FKPurchaseOrderMain")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GetArticle");

                    b.Navigation("LookUpMasterPOStatus");

                    b.Navigation("PurchaseOrderMain");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.TransactionTables.PurchaseOrderMain", b =>
                {
                    b.HasOne("OptimizerBeta3.Models.MasterTables.ArticleGroup", "GetArticleGroup")
                        .WithMany()
                        .HasForeignKey("FKArticleGroup")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterDeliveryTo")
                        .WithMany()
                        .HasForeignKey("FKDeliveryTo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterDestination")
                        .WithMany()
                        .HasForeignKey("FKDestination")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterModeofTransport")
                        .WithMany()
                        .HasForeignKey("FKModeofTransport")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterOrderStatus")
                        .WithMany()
                        .HasForeignKey("FKOrderStatus")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.TransactionTables.PurchaseOrder", "PurchaseOrder")
                        .WithMany()
                        .HasForeignKey("FKPurchaseOrder")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.SizeMaster", "SizeMaster")
                        .WithMany()
                        .HasForeignKey("FKSizeMaster")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GetArticleGroup");

                    b.Navigation("LookUpMasterDeliveryTo");

                    b.Navigation("LookUpMasterDestination");

                    b.Navigation("LookUpMasterModeofTransport");

                    b.Navigation("LookUpMasterOrderStatus");

                    b.Navigation("PurchaseOrder");

                    b.Navigation("SizeMaster");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.TransactionTables.Stock", b =>
                {
                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterCurrency")
                        .WithMany()
                        .HasForeignKey("FKCurrency")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterLocation")
                        .WithMany()
                        .HasForeignKey("FKLocation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterQuality")
                        .WithMany()
                        .HasForeignKey("FKQuality")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterSource")
                        .WithMany()
                        .HasForeignKey("FKSource")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterStage")
                        .WithMany()
                        .HasForeignKey("FKStage")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterStatus")
                        .WithMany()
                        .HasForeignKey("FKStatus")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterUOM")
                        .WithMany()
                        .HasForeignKey("FKUOM")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.UnitMaster", "Unit")
                        .WithMany()
                        .HasForeignKey("FKUnit")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LookUpMasterCurrency");

                    b.Navigation("LookUpMasterLocation");

                    b.Navigation("LookUpMasterQuality");

                    b.Navigation("LookUpMasterSource");

                    b.Navigation("LookUpMasterStage");

                    b.Navigation("LookUpMasterStatus");

                    b.Navigation("LookUpMasterUOM");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.TransactionTables.StockTransfer", b =>
                {
                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterFromDepartment")
                        .WithMany()
                        .HasForeignKey("FKFromDepartment")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterFromLocation")
                        .WithMany()
                        .HasForeignKey("FKFromLocation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.UnitMaster", "FromUnit")
                        .WithMany()
                        .HasForeignKey("FKFromUnit")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterFKOutwardType")
                        .WithMany()
                        .HasForeignKey("FKOutwardType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.Season", "SeasonCode")
                        .WithMany()
                        .HasForeignKey("FKSeason")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterToDepartment")
                        .WithMany()
                        .HasForeignKey("FKToDepartment")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterToLocation")
                        .WithMany()
                        .HasForeignKey("FKToLocation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.UnitMaster", "ToUnit")
                        .WithMany()
                        .HasForeignKey("FKToUnit")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FromUnit");

                    b.Navigation("LookUpMasterFKOutwardType");

                    b.Navigation("LookUpMasterFromDepartment");

                    b.Navigation("LookUpMasterFromLocation");

                    b.Navigation("LookUpMasterToDepartment");

                    b.Navigation("LookUpMasterToLocation");

                    b.Navigation("SeasonCode");

                    b.Navigation("ToUnit");
                });

            modelBuilder.Entity("OptimizerBeta3.Models.TransactionTables.StockTransferDetail", b =>
                {
                    b.HasOne("OptimizerBeta3.Models.TransactionTables.StockTransfer", "StockTransfer")
                        .WithMany()
                        .HasForeignKey("FKSTNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptimizerBeta3.Models.MasterTables.LookUpMaster", "LookUpMasterUOM")
                        .WithMany()
                        .HasForeignKey("FKUOM")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LookUpMasterUOM");

                    b.Navigation("StockTransfer");
                });
#pragma warning restore 612, 618
        }
    }
}
